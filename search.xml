<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo 使用初步]]></title>
    <url>%2F2019%2F08%2F07%2Fhexo%E5%88%9D%E8%A7%81%2F</url>
    <content type="text"><![CDATA[安装npm install -g hexo项目初始化选择新建项目所在文件夹，执行以下命令 hexo init myhexo #初始化项目文档 cd myhexo npm install #安装依赖 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） 主题变更将目标主题clone到/themes文件夹下 yilia $ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia modernist $ git clone https://github.com/heroicyang/hexo-theme-modernist.git themes/modernist jacman $ git clone https://github.com/cnfeat/cnfeat.git themes/jacman next $ git clone https://github.com/theme-next/hexo-theme-next 修改配置参照以下，综合添加评论的复杂度，推荐next+valine。 项目配置修改配置文件_config.yml # Site title: 鱼之乐 subtitle: 子非鱼安知鱼之乐 description: keywords: author: 鱼之乐 language: timezone: ...... # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next #指定使用的主题，主题放在/themes文件夹下 # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: https://github.com/hmilywb/hmilywb.github.io branch: master代码上传必要条件： 配置SSH KEY，相当于用户名密码 配置_config.yml中有关deploy的部分，已在上文项目配置搞定 安装插件hexo-deployer-git npm install hexo-deployer-git –save 正常代码上传可通过 hexo d 注： 此时可能会报错，显示 Fatal: HttpRequestException encountered.这是因为Github禁用了TLS v1.0 and v1.1这种弱加密标准，需要手动更新Windows的git凭证管理器，可从Github官方下载较新版本安装即可。 hexo 常用命令&amp;简写hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） hexo deploy #部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本缩写： hexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy组合命令： hexo s -g #生成并本地预览 hexo d -g #生成并上传写博客定位到hexo根目录，执行命令： hexo new &apos;my-first-page&apos;自动在_posts下生成相关md文件my-first-page.md 这个命令的好处是帮我们自动生成了默认内容，打开这个文件即可开始写博客了，默认生成如下内容： title: postName #文章页面上的显示名称，一般是中文 date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改 categories: 默认分类 #分类 tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格 description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面菜单设置菜单包括：首页、归档、分类、标签、关于等等，默认的只有首页和归档两个，可打开主题配置文件找到Menu Settings menu: home: / || home //首页 archives: /archives/ || archive //归档 categories: /categories/ || th //分类 tags: /tags/ || tags //标签 about: /about/ || user //关于 #schedule: /schedule/ || calendar //日程表 #sitemap: /sitemap.xml || sitemap //站点地图 #commonweal: /404/ || heartbeat //公益404以archives: /archives/ || archive为例：|| 之前的/archives/表示标题“归档”，关于标题的格式可以去themes/next/languages/zh-Hans.yml中参考或修改||之后的archive表示图标，可以去Font Awesome中查看或修改，Next主题所有的图标都来自Font Awesome。 ## Next主题样式设置 Next主题有4种风格可供选择，打开主题配置文件找到Scheme Settings # Schemes # scheme: Muse # scheme: Mist # scheme: Pisces scheme: Gemini4种风格大同小异，目前使用的是Gemini风格。 添加搜索功能安装hexo-generator-searchdb插件 npm install hexo-generator-searchdb --save打开站点配置文件找到Extensions，在下面添加 # 搜索 search: path: search.xml field: post format: html limit: 10000打开主题配置文件找到Local search，将enable设置为true 添加评论功能推荐使用valine，首先注册valine 国际版 创建一个开发版应用（免费） 在LeanCloud-设置-安全中心，把除数据存储其他选项都关闭，安全域名中添加域名 在LeanCloud-存储，添加两个class，分别为Comment和Counter，无限制 在LeanCloud-设置-应用key，获取appid和appkey，以备后用 打开主题配置文件（即next主题中的_config.yml）,找到valine的配置 valine: enable: true appid: xxxxx # Your leancloud application appid appkey: xxxxx # Your leancloud application appkeyhexo重新generate和server，最好clean一下。]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown 语法初步]]></title>
    <url>%2F2019%2F08%2F07%2Fmarkdown%E8%AF%AD%E6%B3%95%E5%88%9D%E6%AD%A5%2F</url>
    <content type="text"><![CDATA[标题# 一级标题，一般一级标题下自带分割线 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题列表有序列表-序号可随便填写，并不影响最终序列 标题1 标题2 标题3 无序列表 标题1 标题2 标题3 引用 我是引用文本1 我是嵌套的引用文本1我是嵌套的引用文本2 在嵌套一层1 在嵌套一层2 我是嵌套的引用文本3 我是引用文本2 文字的样式加粗倾斜删除线下划线 markdown原生并不支持下划线，可通过html标签实现 链接与图片baidu 表格默认的对齐方式为：左对齐方式。 列名1 列名2 列名3 列名4 值1 值1 值2 值x 值1 值1 值2 值x 值1 值1 值2 值x 关键字、代码块、换行、分割线关键字 1代码块 sdfsdfs 换行可插入一个空行，也可在本行末尾插入两个空格任意连续三个--- +++均可实现分割线]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github配置]]></title>
    <url>%2F2019%2F08%2F06%2Fgithub%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[Github简介 Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。 GitHub可以托管各种git库的站点。 GitHub Pages免费的静态站点，三个特点：免费托管、自带主题、支持自制页面和Jekyll。 为什么使用Github Pages 搭建简单而且免费； 支持静态脚本； 可以绑定你的域名； DIY自由发挥，动手实践一些有意思的东西； 理想写博环境，git+github+markdown+jekyll； Github初入 注册自不必说：github官网,按照提示注册即可 创建Repository：登录之后，点击右上角Create New Repository创建一个Repository name为username.github.io的项目 Repository配置： 点击进入新建Repository页面，点击右侧Settings进入配置页面 点击Github Pages容器中的Source按钮，选择master分支 选择喜欢的themes，即完成了github page的初始配置 Github同步工具推荐使用github desktop，也可使用SVN和git，部分包自带更新模块（调用git） 配置SSH keyGit提交代码需要有github权限，不推荐使用用户名和密码，一般使用ssh key来与github进行身份验证。 ssh ls #检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。 ssh-keygen -t rsa -C &quot;邮件地址&quot;然后连续3次回车选择默认选项，生成一个文件在用户目录下，打开用户目录，找到id_rsa.pub文件，复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key添加进去即可 测试一下是否配置成功: ssh -T git@github.com设置账号信息: git config --global user.name &quot;你的名字&quot; git config --global user.email &quot;邮箱@邮箱.com&quot; #github邮箱]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
</search>
